import { jsenvFormatSize } from "./jsenvFormatSize.js"
import { renderDirectoryImpact } from "./renderDirectoryImpact.js"
import { renderFilesImpact } from "./renderFilesImpact.js"
import { renderCacheImpact } from "./renderCacheImpact.js"

export const generatePullRequestCommentString = ({
  pullRequestBase,
  pullRequestHead,
  snapshotComparison,
  formatSize = jsenvFormatSize,
  generatedByLink = true,
  // TODO: handle gzipTracking param
  gzipTracking = true,
  // TODO: handle brotliTracking param
  brotliTracking = true,
  // TODO: add a param controlling by directoryImpact, filesImpact and cacheImpact ?
  // maybe something like comment = {directoryImpact: true, filesImpact: true, cacheImpact: true }
  // (l'ordre des keys de cet objet controllerait l'ordre du message)
}) => {
  const directoryMessages = Object.keys(snapshotComparison).map((directoryRelativeUrl) => {
    const directoryComparison = snapshotComparison[directoryRelativeUrl]

    return `<details>
  <summary>${generateSummary(directoryRelativeUrl)}</summary>
${generateDetails(directoryComparison, {
  directoryRelativeUrl,
  pullRequestBase,
  pullRequestHead,
  formatSize,
  gzipTracking,
  brotliTracking,
  generatedByLink,
})}
</details>`
  })

  if (directoryMessages.length === 0) return null

  return `<!-- Generated by @jsenv/github-pull-request-filesize-impact -->
${directoryMessages.join(`

`)}`
}

const generateSummary = (directoryRelativeUrl) => directoryRelativeUrl

const generateDetails = (
  directoryComparison,
  {
    directoryRelativeUrl,
    pullRequestBase,
    pullRequestHead,
    formatSize,
    gzipTracking,
    brotliTracking,
    generatedByLink,
  },
) => {
  return `${renderDirectoryImpact(directoryComparison, {
    directoryRelativeUrl,
    pullRequestBase,
    pullRequestHead,
    gzipTracking,
    brotliTracking,
    formatSize,
  })}${renderFilesImpact(directoryComparison, {
    directoryRelativeUrl,
    pullRequestBase,
    pullRequestHead,
    gzipTracking,
    brotliTracking,
    formatSize,
  })}${renderCacheImpact(directoryComparison, {
    gzipTracking,
    brotliTracking,
    formatSize,
  })}${generatedByLink ? renderGeneratedByLink() : ""}`
}

const renderGeneratedByLink = () => {
  return `

  <sub>
    Generated by <a href="https://github.com/jsenv/jsenv-github-pull-request-filesize-impact">github pull request filesize impact</a>
  </sub>`
}
